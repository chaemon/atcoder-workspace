import macros
macro Please(x): untyped = nnkStmtList.newTree()

Please use Nim-ACL
Please use Nim-ACL
Please use Nim-ACL


static:
  when not defined SecondCompile:
    # md5sum: ada09d79b1a231b366a738332c141430  atcoder.tar.xz

    template getFileName():string = instantiationInfo().filename
    let fn = getFileName()
    block:
      let (output, ex) = gorgeEx("if [ -e ./atcoder ]; then exit 1; else exit 0; fi")
      doAssert ex == 0, "atcoder directory already exisits"
    discard staticExec("echo \"\" | base64 -d > atcoder.tar.xz && tar -Jxvf atcoder.tar.xz")
    let (output, ex) = gorgeEx("nim cpp -d:release -d:SecondCompile -d:danger --path:./ --opt:speed --multimethods:on --warning[SmallLshouldNotBeUsed]:off --checks:off -o:a.out " & fn)
    discard staticExec("rm -rf ./atcoder");doAssert ex == 0, output;quit(0)


when defined SecondCompile:
  const DO_CHECK = false;const DEBUG = false
else:
  const DO_CHECK = true;const DEBUG = true
const
  USE_DEFAULT_TABLE = true

# see https://github.com/zer0-star/Nim-ACL/tree/master/src/atcoder/extra/header/chaemon_header.nim
include atcoder/extra/header/chaemon_header


# see https://github.com/zer0-star/Nim-ACL/tree/master/src/atcoder/modint.nim
import atcoder/modint

type mint = modint998244353

solveProc solve():
  let
    N, K = nextInt()
    A = Seq[N: nextInt()]
  var
    s = 0 # 今までの和
    ms = mint(1) # 今までの場合の和の和
    cs = initTable[int, mint]() # 累積和, 場合の和
  cs[0] = 1
  for i in N:
    s += A[i]
    let a = ms - cs[s - K]
    if i == N - 1:
      echo a
    cs[s] += a
    ms += a
  discard

when not defined(DO_TEST):
  solve()
else:
  discard

